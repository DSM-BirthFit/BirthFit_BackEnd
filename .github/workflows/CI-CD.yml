name: Java CI-CD with Gradle

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main, develop ]

jobs:
  CI:
    runs-on: ubuntu-latest
    
    env:
      DB_URL: ${{ secrets.DB_URL }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
      MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
      DOCKER_HOST: ${{ secrets.DOCKER_HOST }}
      AWS_ACCESS: ${{ secrets.AWS_ACCESS }}
      AWS_SECRET: ${{ secrets.AWS_SECRET }}
      S3_BUCKET: ${{ secrets.S3_BUCKET }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      JWT_HEADER: ${{ secrets.JWT_HEADER }}
      JWT_PREFIX: ${{ secrets.JWT_PREFIX }}
      JWT_ACCESS: ${{ secrets.JWT_ACCESS }}
      JWT_REFRESH: ${{ secrets.JWT_REFRESH }}
      USER_SECRET: ${{ secrets.USER_SECRET }}
      
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
           
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        
    - name: grant privileges to gradlew
      run: chmod +x gradlew

    - name: run test
      run: ./gradlew test

    - name: run build
      run: ./gradlew clean build -x test
  CD:
    runs-on: ubuntu-latest
    needs: CI
    
    env:
      DB_URL: ${{ secrets.DB_URL }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
      MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
      DOCKER_HOST: ${{ secrets.DOCKER_HOST }}
      AWS_ACCESS: ${{ secrets.AWS_ACCESS }}
      AWS_SECRET: ${{ secrets.AWS_SECRET }}
      S3_BUCKET: ${{ secrets.S3_BUCKET }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      JWT_HEADER: ${{ secrets.JWT_HEADER }}
      JWT_PREFIX: ${{ secrets.JWT_PREFIX }}
      JWT_ACCESS: ${{ secrets.JWT_ACCESS }}
      JWT_REFRESH: ${{ secrets.JWT_REFRESH }}
      USER_SECRET: ${{ secrets.USER_SECRET }}
      
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
          
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    
    - name: grant privileges to gradlew
      run: chmod +x gradlew

    - name: run test
      run: ./gradlew test

    - name: run build
      run: ./gradlew clean build -x test
      
    - name: Build Docker Image
      run: sudo docker build --tag birthfit .

    - name: Upload to Registry
      uses: elgohr/Publish-Docker-Github-Action@master
      with:
        name: hanif610/birthfit
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }} 
